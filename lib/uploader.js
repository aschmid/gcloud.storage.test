// Generated by CoffeeScript 1.9.1
(function() {
  var Uploader, async, config, fs, gcloud, pathFilter, pathmod, rootpath, storage, walk;

  gcloud = require('gcloud');

  pathmod = require('path');

  walk = require('walkdir');

  fs = require('fs');

  async = require('async');

  rootpath = pathmod.join(__dirname, '..');

  config = require('../config');

  storage = gcloud.storage({
    projectId: config.projectid,
    keyFilename: rootpath + '/gcs_keyfile.json'
  });

  pathFilter = function(path) {
    var fname;
    fname = pathmod.basename(path);
    if (fs.lstatSync(path).isDirectory()) {
      return false;
    }
    if (fname.indexOf('.') === 0) {
      return false;
    }
    return true;
  };

  Uploader = (function() {
    function Uploader() {
      var filesdir, paths;
      filesdir = rootpath + '/files';
      paths = walk.sync(filesdir);
      paths = paths.filter(pathFilter);
      async.each(paths, function(path, cb) {
        var bucket, fileobject, image;
        console.log('going to upload', path);
        bucket = storage.bucket(config.bucket);
        image = bucket.file(pathmod.basename(path));
        fileobject = fs.createReadStream(path);
        fileobject.pipe(image.createWriteStream());
        fileobject.on('error', function(err) {
          if (err) {
            return console.log('error is', err);
          }
        });
        return fileobject.on('end', function() {
          console.log(' uploading', path);
          return cb();
        });
      }, function(err) {
        return console.log('all files done...');
      });
    }

    return Uploader;

  })();

  module.exports = Uploader;

}).call(this);

//# sourceMappingURL=uploader.js.map
